[
  {
    "method": "org.candlepin.hostedtest.HostedTestSubscriptionResource.createSubscription",
    "description": "Creates a new subscription from the subscription JSON provided. Any UUID\n provided in the JSON will be ignored when creating the new subscription.",
    "deprecated": null,
    "returns": "The newly created Subscription object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.hostedtest.HostedTestSubscriptionResource.deleteAllSubscriptions",
    "description": "Deletes all subscriptions.",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.hostedtest.HostedTestSubscriptionResource.deleteSubscription",
    "description": "Deletes the specified subscription.",
    "deprecated": null,
    "returns": "True if the subscription was deleted successfully; false\n         otherwise",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.hostedtest.HostedTestSubscriptionResource.getSubscription",
    "description": "Retrieves the subscription for the specified subscription id. If the\n subscription id cannot be found, this method returns null.",
    "deprecated": null,
    "returns": "The requested Subscription object, or null if the subscription\n         could not be found",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.hostedtest.HostedTestSubscriptionResource.isAlive",
    "description": "API to check if resource is alive",
    "deprecated": null,
    "returns": "always returns true",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.hostedtest.HostedTestSubscriptionResource.listSubscriptions",
    "description": "Lists all known subscriptions currently maintained by the subscription service.",
    "deprecated": null,
    "returns": "A collection of subscriptions maintained by the subscription service",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.hostedtest.HostedTestSubscriptionResource.updateSubscription",
    "description": "Updates the specified subscription with the provided subscription data.",
    "deprecated": null,
    "returns": "The updated Subscription object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.ActivationKeyResource.addPoolToKey",
    "url": "/activation_keys/{activation_key_id}/pools/{pool_id}",
    "verifiedParams": [
      "activation_key_id",
      "pool_id"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [
      {
        "name": "quantity",
        "type": "long"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Adds a Pool to an Activation Key",
    "deprecated": null,
    "returns": "an ActivationKey object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ActivationKeyResource.addProductIdToKey",
    "url": "/activation_keys/{activation_key_id}/product/{product_id}",
    "verifiedParams": [
      "activation_key_id"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Adds an Product ID to an Activation Key",
    "deprecated": null,
    "returns": "an Activation Key object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ActivationKeyResource.deleteActivationKey",
    "url": "/activation_keys/{activation_key_id}",
    "verifiedParams": [
      "activation_key_id"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes an Activation Key",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ActivationKeyResource.findActivationKey",
    "url": "/activation_keys",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Activation Keys",
    "deprecated": null,
    "returns": "a list of ActivationKey objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ActivationKeyResource.getActivationKey",
    "url": "/activation_keys/{activation_key_id}",
    "verifiedParams": [
      "activation_key_id"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Activation Key\n <p>\n <pre>\n {\n   \"id\" : \"database_id\",\n   \"name\" : \"default_key\",\n   \"owner\" : {},\n   \"pools\" : [ ],\n   \"productIds\" : [ ],\n   \"autoAttach\" : false,\n   \"contentOverrides\" : [ ],\n   \"releaseVer\" : {},\n   \"serviceLevel\" : null,\n   \"description\" : null,\n   \"updated\" : [date]\n   \"created\" : [date],\n }\n </pre>",
    "deprecated": null,
    "returns": "an ActivationKey object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ActivationKeyResource.getActivationKeyPools",
    "url": "/activation_keys/{activation_key_id}/pools",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Pools based on the Activation Key",
    "deprecated": null,
    "returns": "a list of Pool objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ActivationKeyResource.removePoolFromKey",
    "url": "/activation_keys/{activation_key_id}/pools/{pool_id}",
    "verifiedParams": [
      "activation_key_id",
      "pool_id"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Removes a Pool from an Activation Key",
    "deprecated": null,
    "returns": "an ActivationKey object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ActivationKeyResource.removeProductIdFromKey",
    "url": "/activation_keys/{activation_key_id}/product/{product_id}",
    "verifiedParams": [
      "activation_key_id"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Removes a Product ID from an Activation Key",
    "deprecated": null,
    "returns": "an ActivationKey object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ActivationKeyResource.updateActivationKey",
    "url": "/activation_keys/{activation_key_id}",
    "verifiedParams": [
      "activation_key_id"
    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Updates an Activation Key",
    "deprecated": null,
    "returns": "an ActivationKey object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.AdminResource.getQueueStats",
    "url": "/admin/queues",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "",
    "deprecated": null,
    "returns": "Basic information on the HornetQ queues and how many messages are\n pending in each.\n\n NOTE: This does not report on any pending messages in the AMQP bus.",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.AdminResource.initialize",
    "url": "/admin/init",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "string"
    },
    "description": "Initializes the Candlepin database\n <p>\n Currently this just creates the admin user for standalone deployments using the\n default user service adapter. It must be called once after candlepin is installed,\n repeat calls are not required, but will be harmless.\n <p>\n The String returned is the description if the db was or already is initialized.",
    "deprecated": null,
    "returns": "a String object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.AdminResource.populatedHostedDB",
    "url": "/admin/pophosteddb",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.AtomFeedResource.getFeed",
    "url": "/atom",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves an Event Atom Feed",
    "deprecated": null,
    "returns": "a Feed object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.CdnResource.create",
    "url": "/cdn",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates a CDN",
    "deprecated": null,
    "returns": "a Cdn object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.CdnResource.delete",
    "url": "/cdn/{label}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes a CDN",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.CdnResource.getContentDeliveryNetworks",
    "url": "/cdn",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of CDN's\n <p>\n <pre>\n {\n   \"id\" : \"database_id\",\n   \"label\" : \"the-cdn\",\n   \"name\" : \"The CDN\",\n   \"url\" : \"https://location.cdn.redhat.com\",\n   \"certificate\" : {\n     \"key\" : \"\",\n     \"cert\" : \"\",\n     \"id\" : \"\",\n     \"serial\" : \"serial number\",\n     \"created\" : [date],\n     \"updated\" : [date]\n   },\n   \"created\" : [date],\n   \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "a list of Cdn objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.CdnResource.update",
    "url": "/cdn/{label}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Updates a CDN",
    "deprecated": null,
    "returns": "a Cdn object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.CertificateSerialResource.getCertificateSerial",
    "url": "/serials/{serial_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves single Certificate Serial\n <p>\n <pre>\n {'serial': 'MYSERIALNUMBER'}\n </pre>",
    "deprecated": null,
    "returns": "a CertificateSerial object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.CertificateSerialResource.getCertificateSerials",
    "url": "/serials",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Certificate Serials",
    "deprecated": null,
    "returns": "a list of CertificateSerial objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.bind",
    "url": "/consumers/{consumer_uuid}/entitlements",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [
      {
        "name": "pool",
        "type": "string"
      },
      {
        "name": "product",
        "type": "string[]"
      },
      {
        "name": "quantity",
        "type": "integer"
      },
      {
        "name": "email",
        "type": "string"
      },
      {
        "name": "email_locale",
        "type": "string"
      },
      {
        "name": "async",
        "type": "boolean"
      },
      {
        "name": "entitle_date",
        "type": "string"
      },
      {
        "name": "from_pool",
        "type": "list"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Binds Entitlements\n <p>\n If a pool ID is specified, we know we're binding to that exact pool. Specifying\n an entitle date in this case makes no sense and will throw an error.\n <p>\n If a list of product IDs are specified, we attempt to auto-bind to subscriptions\n which will provide those products. An optional date can be specified allowing\n the consumer to get compliant for some date in the future. If no date is specified\n we assume the current date.\n <p>\n If neither a pool nor an ID is specified, this is a healing request. The path\n is similar to the bind by products, but in this case we use the installed products\n on the consumer, and their current compliant status, to determine which product IDs\n should be requested. The entitle date is used the same as with bind by products.\n <p>\n The Respose will contain a list of Entitlement objects if async is false, or a\n JobDetail object if async is true.",
    "deprecated": null,
    "returns": "a Response object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 403,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.consumerExists",
    "url": "/consumers/{consumer_uuid}/exists",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "HEAD"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Checks for the existence of a Consumer\n <p>\n This method is used to check if a consumer is available on a particular\n shard.  There is no need to do a full GET for the consumer for this check.",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": "If the consumer doesn't exist or cannot be accessed"
      },
      {
        "statusCode": 204,
        "description": "If the consumer exists and can be accessed"
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.create",
    "url": "/consumers",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [
      {
        "name": "username",
        "type": "string"
      },
      {
        "name": "owner",
        "type": "string"
      },
      {
        "name": "activation_keys",
        "type": "string"
      },
      {
        "name": "identity_cert_creation",
        "type": "boolean"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates a Consumer\n <p>\n NOTE: Opening this method up to everyone, as we have\n nothing we can reliably verify in the method signature. Instead we have\n to figure out what owner this consumer is destined for (due to backward\n compatability with existing clients which do not specify an owner during\n registration), and then check the access to the specified owner in the\n method itself.",
    "deprecated": null,
    "returns": "a Consumer object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 403,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.deleteConsumer",
    "url": "/consumers/{consumer_uuid}",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes a Consumer",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 403,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.dryBind",
    "url": "/consumers/{consumer_uuid}/entitlements/dry-run",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "service_level",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Pools and quantities that would be the result of an auto-bind.\n <p>\n This is a dry run of an autobind. It allows the client to see what would be the\n result of an autobind without executing it. It can only do this for the prevously\n established list of installed products for the consumer\n <p>\n If a service level is included in the request, then that level will override the\n one stored on the consumer. If no service level is included then the existing\n one will be used.\n <p>\n The Response has a list of PoolQuantity objects",
    "deprecated": null,
    "returns": "a Response object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 403,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.exportCertificates",
    "url": "/consumers/{consumer_uuid}/certificates",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "serials",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "string"
    },
    "description": "Retrieves a Compressed File of Entitlement Certificates",
    "deprecated": null,
    "returns": "a File of EntitlementCertificate objects",
    "httpStatusCodes": [
      {
        "statusCode": 500,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.exportData",
    "url": "/consumers/{consumer_uuid}/export",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "cdn_label",
        "type": "string"
      },
      {
        "name": "webapp_prefix",
        "type": "string"
      },
      {
        "name": "api_url",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "string"
    },
    "description": "Retrieves a Compressed File representation of a Consumer",
    "deprecated": null,
    "returns": "a File",
    "httpStatusCodes": [
      {
        "statusCode": 403,
        "description": ""
      },
      {
        "statusCode": 500,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.getComplianceStatus",
    "url": "/consumers/{consumer_uuid}/compliance",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "on_date",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retireves the Compliance Status of a Consumer.",
    "deprecated": null,
    "returns": "a ComplianceStatus object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.getComplianceStatusList",
    "url": "/consumers/compliance",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "uuid",
        "type": "list"
      }
    ],
    "returnType": {
      "type": "object",
      "additionalProperties": {
        "type": "any"
      }
    },
    "description": "Retrieves a Compliance Status list for a Consumer",
    "deprecated": null,
    "returns": "a list of ComplianceStatus objects",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.getConsumer",
    "url": "/consumers/{consumer_uuid}",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Consumer\n <p>\n <pre>\n {\n   \"id\" : \"database_id\",\n   \"uuid\" : \"consumer_id\",\n   \"name\" : \"client.rdu.redhat.com\",\n   \"username\" : \"admin\",\n   \"entitlementStatus\" : \"invalid\",\n   \"serviceLevel\" : \"\",\n   \"releaseVer\" : {},\n   \"type\" : {\n     \"id\" : \"database_id\",\n     \"label\" : \"system\",\n     \"manifest\" : false\n   },\n   \"owner\" : {},\n   \"environment\" : null,\n   \"entitlementCount\" : 1,\n   \"lastCheckin\" : \"\",\n   \"installedProducts\" : [],\n   \"canActivate\" : false,\n   \"guestIds\" : [ ],\n   \"capabilities\" : [ ],\n   \"hypervisorId\" : null,\n   \"autoheal\" : true,\n   \"href\" : \"/consumers/consumer_id\",\n   \"created\" : [date],\n   \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "a Consumer object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.getConsumerAtomFeed",
    "url": "/consumers/{consumer_uuid}/atom",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves and Event Atom Feed for a Consumer",
    "deprecated": null,
    "returns": "a Feed object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.getConsumerEvents",
    "url": "/consumers/{consumer_uuid}/events",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Consumer Events",
    "deprecated": null,
    "returns": "a list of Event objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.getEntitlementCertificateSerials",
    "url": "/consumers/{consumer_uuid}/certificates/serials",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Certiticate Serials\n <p>\n Return the client certificate metadata a for the given consumer. This\n is a small subset of data clients can use to determine which certificates\n they need to update/fetch.",
    "deprecated": null,
    "returns": "a list of CertificateSerial objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.getEntitlementCertificates",
    "url": "/consumers/{consumer_uuid}/certificates",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "serials",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Entitlement Certificates for the Consumer",
    "deprecated": null,
    "returns": "a list of EntitlementCertificate  objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.getGuests",
    "url": "/consumers/{consumer_uuid}/guests",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Guest Consumers of a Consumer",
    "deprecated": null,
    "returns": "a list of Consumer objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.getHost",
    "url": "/consumers/{consumer_uuid}/host",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a Host Consumer of a Consumer",
    "deprecated": null,
    "returns": "a Consumer object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.getOwner",
    "url": "/consumers/{consumer_uuid}/owner",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves the Owner associated to a Consumer",
    "deprecated": null,
    "returns": "an Owner object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.getRelease",
    "url": "/consumers/{consumer_uuid}/release",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves the Release of a Consumer",
    "deprecated": null,
    "returns": "a Release object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.list",
    "url": "/consumers",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "username",
        "type": "string"
      },
      {
        "name": "type",
        "type": "set"
      },
      {
        "name": "owner",
        "type": "string"
      },
      {
        "name": "uuid",
        "type": "list"
      },
      {
        "name": "hypervisor_id",
        "type": "list"
      },
      {
        "name": "fact",
        "type": "list"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of the Consumers",
    "deprecated": null,
    "returns": "list of Consumer objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.listEntitlements",
    "url": "/consumers/{consumer_uuid}/entitlements",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "product",
        "type": "string"
      },
      {
        "name": "regen",
        "type": "boolean"
      },
      {
        "name": "matches",
        "type": "string"
      },
      {
        "name": "attribute",
        "type": "list"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrives a list of Entitlements",
    "deprecated": null,
    "returns": "a list of Entitlement objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.performConsumerUpdates",
    "description": "",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.regenerateEntitlementCertificates",
    "url": "/consumers/{consumer_uuid}/certificates",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [
      {
        "name": "entitlement",
        "type": "string"
      },
      {
        "name": "lazy_regen",
        "type": "boolean"
      }
    ],
    "returnType": null,
    "description": "Regenerates the Entitlement Certificates for a Consumer",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.regenerateIdentityCertificates",
    "url": "/consumers/{consumer_uuid}",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Consumer",
    "deprecated": null,
    "returns": "a Consumer object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.removeDeletionRecord",
    "url": "/consumers/{consumer_uuid}/deletionrecord",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes the Deletion Record for a Consumer\n <p>\n Allowed for a superadmin. The main use case for this would be if\n a user accidently deleted a non-RHEL hypervisor, causing it to no\n longer be auto-detected via virt-who.",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.unbind",
    "url": "/consumers/{consumer_uuid}/entitlements/{dbid}",
    "verifiedParams": [
      "consumer_uuid",
      "dbid"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes an Entitlement from a Consumer\n <p>\n By the Entitlement ID",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 403,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.unbindAll",
    "url": "/consumers/{consumer_uuid}/entitlements",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Unbinds all Entitlements for a Consumer\n <p>\n Result contains the total number of entitlements unbound.",
    "deprecated": null,
    "returns": "a DeleteResult object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.unbindByPool",
    "url": "/consumers/{consumer_uuid}/entitlements/pool/{pool_id}",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes all Entitlements from a Consumer\n <p>\n By Pool Id",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 403,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.unbindBySerial",
    "url": "/consumers/{consumer_uuid}/certificates/{serial}",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes an Entitlement from a Consumer\n <p>\n By the Certificate Serial",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 403,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerResource.updateConsumer",
    "url": "/consumers/{consumer_uuid}",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Updates a Consumer",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerTypeResource.create",
    "url": "/consumertypes",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates a Consumer Type",
    "deprecated": null,
    "returns": "a ConsumerType object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerTypeResource.deleteConsumerType",
    "url": "/consumertypes/{id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes a Consumer Type",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerTypeResource.getConsumerType",
    "url": "/consumertypes/{id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Consumer Type\n <p>\n <pre>\n  {\n    \"id\" : \"database_id\",\n    \"label\" : \"candlepin\",\n    \"manifest\" : true\n }\n </pre>",
    "deprecated": null,
    "returns": "a ConsumerType object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerTypeResource.list",
    "url": "/consumertypes",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Consumer Types",
    "deprecated": null,
    "returns": "a list of ConsumerType objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ConsumerTypeResource.update",
    "url": "/consumertypes/{id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Updates a Consumer Type",
    "deprecated": null,
    "returns": "a ConsumerType object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ContentOverrideResource.addContentOverrides",
    "url": "/consumers/{consumer_uuid}/content_overrides",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Adds a Content Override to a Principal",
    "deprecated": null,
    "returns": "a list of ContentOverride objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ContentOverrideResource.deleteContentOverrides",
    "url": "/consumers/{consumer_uuid}/content_overrides",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Removes a Content Override from a Principal",
    "deprecated": null,
    "returns": "a list of ContentOverride objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ContentOverrideResource.getContentOverrideList",
    "url": "/consumers/{consumer_uuid}/content_overrides",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves list of Content Overrides\n <p>\n Based on the Consumer or Activation Key",
    "deprecated": null,
    "returns": "a list of ContentOverride objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ContentResource.createBatchContent",
    "url": "/content/batch",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Creates Contents in bulk",
    "deprecated": null,
    "returns": "a list of Content objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ContentResource.createContent",
    "url": "/content",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates a Content",
    "deprecated": null,
    "returns": "a Content object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ContentResource.getContent",
    "url": "/content/{content_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Content\n <p>\n <pre>\n {\n   \"id\" : \"database_id\",\n   \"type\" : \"yum\",\n   \"label\" : \"content_label\",\n   \"name\" : \"content_name\",\n   \"vendor\" : \"test-vendor\",\n   \"contentUrl\" : \"/foo/path/always\",\n   \"requiredTags\" : \"TAG1,TAG2\",\n   \"releaseVer\" : null,\n   \"gpgUrl\" : \"/foo/path/always/gpg\",\n   \"metadataExpire\" : null,\n   \"modifiedProductIds\" : [ ],\n   \"arches\" : null,\n   \"created\" : [date],\n   \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "a Content object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ContentResource.list",
    "url": "/content",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves list of Content",
    "deprecated": null,
    "returns": "a list of Content objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ContentResource.remove",
    "url": "/content/{content_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Deletes a Content",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ContentResource.updateContent",
    "url": "/content/{content_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Updates a Content",
    "deprecated": null,
    "returns": "a Content object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.CrlResource.getCurrentCrl",
    "url": "/crl",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves the Certificate Revocation List",
    "deprecated": null,
    "returns": "a String object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.CrlResource.unrevoke",
    "url": "/crl",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [
      {
        "name": "serial",
        "type": "string[]"
      }
    ],
    "returnType": null,
    "description": "Deletes a Certificate from the Revocation List",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.DeletedConsumerResource.listByDate",
    "url": "/deleted_consumers",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "date",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Deleted Consumers\n <p>\n By deletion date or all. List returned is the deleted Consumers.",
    "deprecated": null,
    "returns": "a list of Consumer objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.DistributorVersionResource.create",
    "url": "/distributor_versions",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates a Distributor Version",
    "deprecated": null,
    "returns": "a DistributorVersion object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.DistributorVersionResource.delete",
    "url": "/distributor_versions/{id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Deletes a Distributor Version",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.DistributorVersionResource.getVersions",
    "url": "/distributor_versions",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "name_search",
        "type": "string"
      },
      {
        "name": "capability",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves list of Distributor Versions\n <p>\n <pre>\n {\n   \"id\" : \"database_id\",\n   \"name\" : \"sat-5.6\",\n   \"displayName\" : \"Satellite 5.6\",\n   \"capabilities\" : [ {\n     \"id\" : \"database_id\",\n     \"name\" : \"derived_product\"\n   }, {\n     \"id\" : \"database_id\",\n     \"name\" : \"ram\"\n   }, {\n     \"id\" : \"database_id\",\n     \"name\" : \"cert_v3\"\n   }, {\n     \"id\" : \"database_id\",\n     \"name\" : \"cores\"\n   }, {\n     \"id\" : \"database_id\",\n     \"name\" : \"instance_multiplier\"\n   } ],\n   \"created\" : [date],\n   \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "a list of DistributorVersion objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.DistributorVersionResource.update",
    "url": "/distributor_versions/{id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Updates a Distributor Version",
    "deprecated": null,
    "returns": "a DistributorVersion object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EntitlementResource.getEntitlement",
    "url": "/entitlements/{dbid}",
    "verifiedParams": [
      "dbid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Entitlement\n <p>\n <pre>\n {\n   \"id\" : \"database_id\",\n   \"consumer\" : {},\n   \"pool\" : {},\n   \"certificates\" : [ ],\n   \"quantity\" : 1,\n   \"startDate\" : [date],\n   \"endDate\" : [date],\n   \"href\" : \"/entitlements/database_id\",\n   \"created\" : [date],\n   \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "an Entitlement object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EntitlementResource.getUpstreamCert",
    "url": "/entitlements/{dbid}/upstream_cert",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "string"
    },
    "description": "Retrieves a Subscription Certificate\n <p>\n We can't return CdnInfo at this time, but when the time comes this\n is the implementation we want to start from. It will require changes\n to thumbslug.\n <p>\n public CdnInfo getEntitlementUpstreamCert\n will also @Produces(MediaType.APPLICATION_JSON)",
    "deprecated": null,
    "returns": "a String object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EntitlementResource.hasEntitlement",
    "url": "/entitlements/consumer/{consumer_uuid}/product/{product_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Checks Consumer for Product Entitlement",
    "deprecated": null,
    "returns": "a boolean",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EntitlementResource.listAllForConsumer",
    "url": "/entitlements",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "consumer",
        "type": "string"
      },
      {
        "name": "matches",
        "type": "string"
      },
      {
        "name": "attribute",
        "type": "list"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves list of Entitlements",
    "deprecated": null,
    "returns": "a list of Entitlement objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EntitlementResource.migrateEntitlement",
    "url": "/entitlements/{entitlement_id}/migrate",
    "verifiedParams": [
      "entitlement_id"
    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [
      {
        "name": "to_consumer",
        "type": "string"
      },
      {
        "name": "quantity",
        "type": "integer"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Migrate entitlements from one distributor consumer to another\n\n  Can specify full or partial quantity. No specified quantity\n   will lead to full migration of the entitlement.",
    "deprecated": null,
    "returns": "a Response object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EntitlementResource.regenerateEntitlementCertificatesForProduct",
    "url": "/entitlements/product/{product_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [
      {
        "name": "lazy_regen",
        "type": "boolean"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Regenerates the Entitlement Certificates for a Product",
    "deprecated": null,
    "returns": "a JobDetail object",
    "httpStatusCodes": [
      {
        "statusCode": 202,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EntitlementResource.unbind",
    "url": "/entitlements/{dbid}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Deletes an Entitlement",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 403,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EntitlementResource.updateEntitlement",
    "url": "/entitlements/{entitlement_id}",
    "verifiedParams": [
      "entitlement_id"
    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Updates an Entitlement\n <p>\n This only works for the quantity.",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EnvironmentResource.create",
    "url": "/environments/{env_id}/consumers",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [
      {
        "name": "username",
        "type": "string"
      },
      {
        "name": "owner",
        "type": "string"
      },
      {
        "name": "activation_keys",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates an Environment",
    "deprecated": null,
    "returns": "an Environment object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.EnvironmentResource.deleteEnv",
    "url": "/environments/{env_id}",
    "verifiedParams": [
      "env_id"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Deletes an environment.\n <p>\n WARNING: this will delete all consumers in the environment and revoke their\n entitlement certificates.",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EnvironmentResource.demoteContent",
    "url": "/environments/{env_id}/content",
    "verifiedParams": [
      "env_id"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [
      {
        "name": "content",
        "type": "string[]"
      },
      {
        "name": "lazy_regen",
        "type": "boolean"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Demotes a Content from an Environment.\n <p>\n Consumer's registered to this environment will no see this content in their\n entitlement certificates. (after they are regenerated and synced to clients)\n <p>\n This call accepts multiple content IDs to demote at once, allowing us to\n mass demote, then trigger a cert regeneration.\n <p>\n NOTE: This call expects the actual content IDs, *not* the ID created for\n each EnvironmentContent object created after a promotion. This is to help\n integrate with other management apps which should not have to track/lookup\n a specific ID for the content to demote.",
    "deprecated": null,
    "returns": "a JobDetail object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EnvironmentResource.getEnv",
    "url": "/environments/{env_id}",
    "verifiedParams": [
      "env_id"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Environment",
    "deprecated": null,
    "returns": "an Environment object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EnvironmentResource.getEnvironments",
    "url": "/environments",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Lists the Environments\n <p>\n Only available to super admins.",
    "deprecated": null,
    "returns": "a list of Environment objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EnvironmentResource.promoteContent",
    "url": "/environments/{env_id}/content",
    "verifiedParams": [
      "env_id"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [
      {
        "name": "lazy_regen",
        "type": "boolean"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Promotes a Content into an Environment.\n <p>\n This call accepts multiple content sets to promote at once, after which\n all affected certificates for consumers in the enironment will be\n regenerated.\n <p>\n Consumers registered to this environment will now receive this content in\n their entitlement certificates.\n <p>\n Because the certificate regeneraiton can be quite time consuming, this\n is done as an asynchronous job. The content will be promoted and immediately\n available for new entitlements, but existing entitlements could take some time\n to be regenerated and sent down to clients as they check in.",
    "deprecated": null,
    "returns": "a A JobDetail object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EventResource.getEvent",
    "url": "/events/{uuid}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Event\n <p>\n <pre>\n {\n   \"id\" : \"database_id\",\n   \"type\" : \"MODIFIED\",\n   \"target\" : \"CONSUMER\",\n   \"targetName\" : \"client.rdu.redhat.com\",\n   \"timestamp\" : [date],\n   \"entityId\" : \"entity_id\",\n   \"ownerId\" : \"owner_id\",\n   \"consumerId\" : \"consumer_id\",\n   \"referenceId\" : null,\n   \"referenceType\" : null,\n   \"messageText\" : \"text\",\n   \"principal\" : {\n     \"type\" : \"consumer\",\n     \"name\" : \"consumer_uuid\"\n   }\n }\n </pre>",
    "deprecated": null,
    "returns": "an Event object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.EventResource.listEvents",
    "url": "/events",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Events",
    "deprecated": null,
    "returns": "a list of Event objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.GuestIdResource.deleteGuest",
    "url": "/consumers/{consumer_uuid}/guestids/{guest_id}",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [
      {
        "name": "unregister",
        "type": "boolean"
      }
    ],
    "returnType": null,
    "description": "Removes the Guest from the Consumer",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.GuestIdResource.getGuestId",
    "url": "/consumers/{consumer_uuid}/guestids/{guest_id}",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Guest\n <p>\n By its consumer and the guest UUID",
    "deprecated": null,
    "returns": "a GuestId object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.GuestIdResource.getGuestIds",
    "url": "/consumers/{consumer_uuid}/guestids",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves the List of a Consumer's Guests",
    "deprecated": null,
    "returns": "a list of GuestId objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.GuestIdResource.updateGuest",
    "url": "/consumers/{consumer_uuid}/guestids/{guest_id}",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Updates a single Guest on a Consumer\n <p>\n Allows virt-who to avoid uploading an entire list of guests",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.GuestIdResource.updateGuests",
    "url": "/consumers/{consumer_uuid}/guestids",
    "verifiedParams": [
      "consumer_uuid"
    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Updates the List of Guests on a Consumer\n <p>\n This method should work just like updating the consumer, except that it only\n updates GuestIds.  Eventually we should move All the logic here, and depricate\n updating guests through the consumer update.",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.HypervisorResource.hypervisorUpdate",
    "url": "/hypervisors",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [
      {
        "name": "owner",
        "type": "string"
      },
      {
        "name": "create_missing",
        "type": "boolean"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Updates the list of Hypervisor Guests\n <p>\n Allows agents such as virt-who to update its host list and associate the\n guests for each host. This is typically used when a host is unable to\n register to candlepin via subscription manager.\n <p>\n In situations where consumers already exist it is probably best not to\n allow creation of new hypervisor consumers.  Most consumers do not\n have a hypervisorId attribute, so that should be added manually\n when necessary by the management environment.",
    "deprecated": "Use the asynchronous method",
    "returns": "a HypervisorCheckInResult object",
    "httpStatusCodes": [
      {
        "statusCode": 202,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.HypervisorResource.hypervisorUpdateAsync",
    "url": "/hypervisors/{owner}",
    "verifiedParams": [
      "owner"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [
      {
        "name": "create_missing",
        "type": "boolean"
      },
      {
        "name": "reporter_id",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates or Updates the list of Hypervisor hosts\n <p>\n Allows agents such as virt-who to update hosts' information . This is typically\n used when a host is unable to register to candlepin via subscription manager.\n <p>\n In situations where consumers already exist it is probably best not to\n allow creation of new hypervisor consumers.  Most consumers do not\n have a hypervisorId attribute, so that should be added manually\n when necessary by the management environment.",
    "deprecated": null,
    "returns": "a JobDetail object",
    "httpStatusCodes": [
      {
        "statusCode": 202,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.JobResource.cancel",
    "url": "/jobs/{job_id}",
    "verifiedParams": [
      "job_id"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Cancels a Job Status",
    "deprecated": null,
    "returns": "a JobStatus object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.JobResource.getSchedulerStatus",
    "url": "/jobs/scheduler",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves the Scheduler Status",
    "deprecated": null,
    "returns": "a SchedulerStatus object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.JobResource.getStatus",
    "url": "/jobs/{job_id}",
    "verifiedParams": [
      "job_id"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "result_data",
        "type": "boolean"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Job Status\n <p>\n <pre>\n {\n   \"id\" : \"refresh_pools_uuid\",\n   \"state\" : \"FINISHED\",\n   \"startTime\" : [date],\n   \"finishTime\" : [date],\n   \"result\" : \"Pools refreshed for owner Admin Owner\",\n   \"principalName\" : \"admin\",\n   \"targetType\" : \"owner\",\n   \"targetId\" : \"admin\",\n   \"group\" : \"async group\",\n   \"done\" : true,\n   \"statusPath\" : \"/jobs/refresh_pools_uuid\",\n   \"created\" : [date],\n   \"updated\" : [date]\n } *\n </pre>",
    "deprecated": null,
    "returns": "a JobStatus object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.JobResource.getStatusAndDeleteIfFinished",
    "url": "/jobs/{job_id}",
    "verifiedParams": [
      "job_id"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a Job Status and Removes if finished",
    "deprecated": null,
    "returns": "a JobStatus object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.JobResource.getStatuses",
    "url": "/jobs",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "owner",
        "type": "string"
      },
      {
        "name": "consumer",
        "type": "string"
      },
      {
        "name": "principal",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Job Status",
    "deprecated": null,
    "returns": "a list of JobStatus objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.JobResource.setSchedulerStatus",
    "url": "/jobs/scheduler",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Updates the Scheduler Status",
    "deprecated": null,
    "returns": "a SchedulerStatus object",
    "httpStatusCodes": [
      {
        "statusCode": 500,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerContentResource.createBatchContent",
    "description": "Creates Contents in bulk",
    "deprecated": null,
    "returns": "a list of Content objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerContentResource.createContent",
    "description": "Creates a Content",
    "deprecated": null,
    "returns": "a Content object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerContentResource.getContent",
    "description": "Retrieves a single Content\n <p>\n <pre>\n {\n   \"id\" : \"database_id\",\n   \"type\" : \"yum\",\n   \"label\" : \"content_label\",\n   \"name\" : \"content_name\",\n   \"vendor\" : \"test-vendor\",\n   \"contentUrl\" : \"/foo/path/always\",\n   \"requiredTags\" : \"TAG1,TAG2\",\n   \"releaseVer\" : null,\n   \"gpgUrl\" : \"/foo/path/always/gpg\",\n   \"metadataExpire\" : null,\n   \"modifiedProductIds\" : [ ],\n   \"arches\" : null,\n   \"created\" : [date],\n   \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "a Content object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerContentResource.list",
    "description": "Retrieves list of Content",
    "deprecated": null,
    "returns": "a list of Content objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerContentResource.remove",
    "description": "Deletes a Content",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerContentResource.updateContent",
    "description": "Updates a Content",
    "deprecated": null,
    "returns": "a Content object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.OwnerProductResource.addBatchContent",
    "description": "Adds Content to a Product\n <p>\n Batch mode",
    "deprecated": null,
    "returns": "a Product object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerProductResource.addContent",
    "description": "Adds Content to a Product\n <p>\n Single mode",
    "deprecated": null,
    "returns": "a Product object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerProductResource.createProduct",
    "description": "Creates a Product\n <p>\n Returns either the new created Product or the Product that already existed.",
    "deprecated": null,
    "returns": "a Product object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerProductResource.deleteProduct",
    "description": "Removes a Product",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerProductResource.getProduct",
    "description": "Retrieves a single Product\n <p>\n <pre>\n {\n   \"id\" : \"product_id\",\n   \"name\" : \"product_name\",\n   \"multiplier\" : 1,\n   \"attributes\" : [ {\n     \"name\" : \"version\",\n     \"value\" : \"1.0\",\n     \"created\" : [date],\n     \"updated\" : [date]\n   } ],\n   \"productContent\" : [ ],\n   \"dependentProductIds\" : [ ],\n   \"href\" : \"/products/product_id\",\n   \"created\" : [date],\n   \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "a Product object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerProductResource.getProductCertificate",
    "description": "Retreives a Certificate for a Product",
    "deprecated": null,
    "returns": "a ProductCertificate object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerProductResource.getProductStats",
    "description": "Retrieves a list of Statistics for a Product\n <p>\n By Statistic type",
    "deprecated": null,
    "returns": "a list of Statistic objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerProductResource.list",
    "description": "Retrieves a list of Products",
    "deprecated": null,
    "returns": "a list of Product objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerProductResource.refreshPoolsForProduct",
    "description": "Refreshes Pools by Product",
    "deprecated": null,
    "returns": "a JobDetail object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.OwnerProductResource.removeContent",
    "description": "Removes Content from a Product",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerProductResource.updateProduct",
    "description": "Updates a Product",
    "deprecated": null,
    "returns": "a Product object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.createActivationKey",
    "url": "/owners/{owner_key}/activation_keys",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates an Activation Key for the Owner",
    "deprecated": null,
    "returns": "an Activation Key object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.createEnv",
    "url": "/owners/{owner_key}/environments",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates an Environment for an Owner",
    "deprecated": null,
    "returns": "an Environment object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.createOwner",
    "url": "/owners",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates an Owner",
    "deprecated": null,
    "returns": "an Owner object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.createPool",
    "url": "/owners/{owner_key}/pools",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates a custom pool for an Owner. Floating pools are not tied to any\n upstream subscription, and are most commonly used for custom content\n delivery in Satellite.\n Also helps in on-site deployment testing",
    "deprecated": null,
    "returns": "a Pool object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.createSubscription",
    "url": "/owners/{owner_key}/subscriptions",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates a Subscription for an Owner\n\n DEPRECATED: Please create pools directly with POST /pools.",
    "deprecated": "Please create pools directly with POST /pools.",
    "returns": "a Subscription object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.createUeberCertificate",
    "url": "/owners/{owner_key}/uebercert",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates an Ueber Entitlement Certificate",
    "deprecated": null,
    "returns": "an EntitlementCertificate object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.deleteLogLevel",
    "url": "/owners/{owner_key}/log",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Remove the Log Level of an Owner",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.deleteOwner",
    "url": "/owners/{owner_key}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [
      {
        "name": "revoke",
        "type": "boolean"
      }
    ],
    "returnType": null,
    "description": "Removes an Owner",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getEvents",
    "url": "/owners/{owner_key}/events",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Events for an Owner",
    "deprecated": null,
    "returns": "a list of Event objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getHypervisors",
    "url": "/owners/{owner_key}/hypervisors",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "hypervisor_id",
        "type": "list"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Hypervisors for an Owner",
    "deprecated": null,
    "returns": "a list of Consumer objects",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getImports",
    "url": "/owners/{owner_key}/imports",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Import Records for an Owner",
    "deprecated": null,
    "returns": "a list of ImportRecord objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getOwner",
    "url": "/owners/{owner_key}",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Owner\n <p>\n <pre>\n {\n   \"parentOwner\" : null,\n   \"id\" : \"database_id\",\n   \"key\" : \"admin\",\n   \"displayName\" : \"Admin Owner\",\n   \"contentPrefix\" : null,\n   \"defaultServiceLevel\" : null,\n   \"upstreamConsumer\" : null,\n   \"logLevel\" : null,\n   \"href\" : \"/owners/admin\",\n   \"created\" : [date],\n   \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "an Owner object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getOwnerAtomFeed",
    "url": "/owners/{owner_key}/atom",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves an Event Atom Feed for an owner",
    "deprecated": null,
    "returns": "a Feed object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getOwnerInfo",
    "url": "/owners/{owner_key}/info",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves the Owner Info for an Owner",
    "deprecated": null,
    "returns": "an OwnerInfo object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getStatistics",
    "description": "Retrieves a list of Statistics for an Owner\n <p>\n By Types",
    "deprecated": null,
    "returns": "a list of Statistic objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getStatistics(java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
    "url": "/owners/{owner_key}/statistics",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "from",
        "type": "string"
      },
      {
        "name": "to",
        "type": "string"
      },
      {
        "name": "days",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    }
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getStatistics(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
    "url": "/owners/{owner_key}/statistics/{type}",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "reference",
        "type": "string"
      },
      {
        "name": "from",
        "type": "string"
      },
      {
        "name": "to",
        "type": "string"
      },
      {
        "name": "days",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    }
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getStatistics(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
    "url": "/owners/{owner_key}/statistics/{qtype}/{vtype}",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "reference",
        "type": "string"
      },
      {
        "name": "from",
        "type": "string"
      },
      {
        "name": "to",
        "type": "string"
      },
      {
        "name": "days",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    }
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getSubscriptions",
    "url": "/owners/{owner_key}/subscriptions",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Subscriptions for an Owner",
    "deprecated": null,
    "returns": "a list of Subscription objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getUeberCertificate",
    "url": "/owners/{owner_key}/uebercert",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves the Ueber Entitlement Certificate",
    "deprecated": null,
    "returns": "an EntitlementCertificate object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.getUpstreamConsumers",
    "url": "/owners/{owner_key}/upstream_consumers",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Upstream Consumers for an Owner",
    "deprecated": null,
    "returns": "a list of UpstreamConsumer objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.healEntire",
    "url": "/owners/{owner_key}/entitlements",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Heals an Owner\n <p>\n Starts an asynchronous healing for the given Owner. At the end of the\n process the idea is that all of the consumers in the owned by the Owner\n will be up to date.",
    "deprecated": null,
    "returns": "a JobDetail object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 202,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.importManifest",
    "url": "/owners/{owner_key}/imports",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [
      {
        "name": "force",
        "type": "string[]"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Imports a manifest zip file for the given organization.\n\n This will bring in any products, content, and subscriptions that were assigned to\n the distributor who generated the manifest.",
    "deprecated": null,
    "returns": "a ImportRecord object if the import is successful.",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 500,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      },
      {
        "statusCode": 409,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.list",
    "url": "/owners",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "key",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Owners",
    "deprecated": null,
    "returns": "a list of Owner objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.listConsumers",
    "url": "/owners/{owner_key}/consumers",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "username",
        "type": "string"
      },
      {
        "name": "type",
        "type": "set"
      },
      {
        "name": "uuid",
        "type": "list"
      },
      {
        "name": "hypervisor_id",
        "type": "list"
      },
      {
        "name": "fact",
        "type": "list"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieve a list of Consumers for the Owner",
    "deprecated": null,
    "returns": "a list of Consumer objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.listEnvironments",
    "url": "/owners/{owner_key}/environments",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "name",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Environments for an Owner",
    "deprecated": null,
    "returns": "a list of Environment objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.listPools",
    "url": "/owners/{owner_key}/pools",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "consumer",
        "type": "string"
      },
      {
        "name": "activation_key",
        "type": "string"
      },
      {
        "name": "product",
        "type": "string"
      },
      {
        "name": "subscription",
        "type": "string"
      },
      {
        "name": "listall",
        "type": "boolean"
      },
      {
        "name": "activeon",
        "type": "string"
      },
      {
        "name": "matches",
        "type": "string"
      },
      {
        "name": "attribute",
        "type": "list"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Pools for an Owner",
    "deprecated": null,
    "returns": "a list of Pool objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.ownerActivationKeys",
    "url": "/owners/{owner_key}/activation_keys",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Activation Keys for an Owner",
    "deprecated": null,
    "returns": "a list of Activation Key objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.ownerEntitlements",
    "url": "/owners/{owner_key}/entitlements",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "product",
        "type": "string"
      },
      {
        "name": "matches",
        "type": "string"
      },
      {
        "name": "attribute",
        "type": "list"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves the list of Entitlements for an Owner",
    "deprecated": null,
    "returns": "a list of Entitlement objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.ownerServiceLevels",
    "url": "/owners/{owner_key}/servicelevels",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "exempt",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Support Levels for an Owner",
    "deprecated": null,
    "returns": "a set of String objects",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.refreshPools",
    "url": "/owners/{owner_key}/subscriptions",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [
      {
        "name": "auto_create_owner",
        "type": "boolean"
      },
      {
        "name": "lazy_regen",
        "type": "boolean"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Refreshes the Pools for an Owner\n <p>\n 'Tickle' an owner to have all of their entitlement pools synced with\n their subscriptions. This method (and the one below may not be entirely\n RESTful, as the updated data is not supplied as an argument.\n\n This API call is only relevant in a top level hosted deployment where subscriptions\n and products are sourced from adapters. Calling this in an on-site deployment\n is just a no-op.",
    "deprecated": null,
    "returns": "a JobDetail object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 202,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.setLogLevel",
    "url": "/owners/{owner_key}/log",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [
      {
        "name": "level",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Sets the Log Level for an Owner",
    "deprecated": null,
    "returns": "an Owner object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.undoImports",
    "url": "/owners/{owner_key}/imports",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Removes Imports for an Owner\n <p>\n Cleans out all imported subscriptions and triggers a background refresh pools.\n Link to an upstream distributor is removed for the owner, so they can import from\n another distributor. Other owners can also now import the manifests originally\n used in this owner.\n <p>\n This call does not differentiate between any specific import, it just\n destroys all subscriptions with an upstream pool ID, essentially anything from\n an import. Custom subscriptions will be left alone.\n <p>\n Imports do carry rules and product information which is global to the candlepin\n server. This import data is *not* undone, we assume that updates to this data\n can be safely kept.",
    "deprecated": null,
    "returns": "a JobDetail object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.updateOwner",
    "url": "/owners/{owner_key}",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Updates an Owner\n <p>\n To un-set the defaultServiceLevel for an owner, submit an empty string.",
    "deprecated": null,
    "returns": "an Owner object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.updatePool",
    "url": "/owners/{owner_key}/pools",
    "verifiedParams": [
      "owner_key"
    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Updates a pool for an Owner.\n assumes this is a normal pool, and errors out otherwise cause we cannot\n create master pools from bonus pools\n TODO: while this method replaces the now deprecated updateSubsciption, it\n still uses it underneath. We need to re-implement the wheel like we did\n in createPool",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.OwnerResource.updateSubscription",
    "url": "/owners/subscriptions",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Updates a Subscription for an Owner",
    "deprecated": "Please update pools directly with POST /pools.",
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.PoolResource.deletePool",
    "url": "/pools/{pool_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Remove a Pool",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": "if the request succeeded"
      },
      {
        "statusCode": 404,
        "description": "if the pool with the specified id is not found"
      }
    ]
  },
  {
    "method": "org.candlepin.resource.PoolResource.getPool",
    "url": "/pools/{pool_id}",
    "verifiedParams": [
      "pool_id"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "consumer",
        "type": "string"
      },
      {
        "name": "activeon",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Pool\n <p>\n <pre>\n {\n   \"id\" : \"database_id\",\n   \"active\" : \"true\",\n   \"startDate\" : [date]\n   \"endDate\" : [date],\n   \"quantity\" : \"20000\",\n   \"consumed\" : \"20000\",\n   \"productId\" : \"product_id\",\n   \"productName\": \"product_name\",\n   \"sourceEntitlement\": null,\n   \"unlimited\": false,\n   \"created\": [date],\n   \"updated\": [date],\n }\n </pre>",
    "deprecated": null,
    "returns": "a Pool object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": "if the request succeeded"
      },
      {
        "statusCode": 404,
        "description": "if the pool with the specified id is not found"
      },
      {
        "statusCode": 404,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.PoolResource.getPoolEntitlements",
    "url": "/pools/{pool_id}/entitlements",
    "verifiedParams": [
      "pool_id"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieve a list of Entitlements for a Pool",
    "deprecated": null,
    "returns": "a list of Entitlement objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.PoolResource.getPoolStats",
    "description": "Retrieve a list of Statistics for a Pool\n <p>\n By Type",
    "deprecated": null,
    "returns": "a list of Statistic objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.PoolResource.getPoolStats(java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
    "url": "/pools/{pool_id}/statistics",
    "verifiedParams": [
      "pool_id"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "from",
        "type": "string"
      },
      {
        "name": "to",
        "type": "string"
      },
      {
        "name": "days",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    }
  },
  {
    "method": "org.candlepin.resource.PoolResource.getPoolStats(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
    "url": "/pools/{pool_id}/statistics/{vtype}",
    "verifiedParams": [
      "pool_id"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "from",
        "type": "string"
      },
      {
        "name": "to",
        "type": "string"
      },
      {
        "name": "days",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    }
  },
  {
    "method": "org.candlepin.resource.PoolResource.list",
    "url": "/pools",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "owner",
        "type": "string"
      },
      {
        "name": "consumer",
        "type": "string"
      },
      {
        "name": "product",
        "type": "string"
      },
      {
        "name": "listall",
        "type": "boolean"
      },
      {
        "name": "activeon",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Pools",
    "deprecated": "Use the method on /owners",
    "returns": "a list of Pool objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": "if the request succeeded"
      },
      {
        "statusCode": 400,
        "description": "if both consumer(unit) and owner are given, or if a product id is specified without a consumer(unit) or owner"
      },
      {
        "statusCode": 404,
        "description": "if a specified consumer(unit) or owner is not found"
      },
      {
        "statusCode": 403,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ProductResource.addBatchContent",
    "url": "/products/{product_id}/batch_content",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Adds Content to a Product\n <p>\n Batch mode",
    "deprecated": null,
    "returns": "a Product object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ProductResource.addContent",
    "url": "/products/{product_id}/content/{content_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [
      {
        "name": "enabled",
        "type": "boolean"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Adds Content to a Product\n <p>\n Single mode",
    "deprecated": null,
    "returns": "a Product object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ProductResource.createProduct",
    "url": "/products",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates a Product\n <p>\n Returns either the new created Product or the Product that already existed.",
    "deprecated": null,
    "returns": "a Product object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ProductResource.deleteProduct",
    "url": "/products/{product_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes a Product",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ProductResource.getProduct",
    "url": "/products/{product_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Product\n <p>\n <pre>\n {\n   \"id\" : \"product_id\",\n   \"name\" : \"product_name\",\n   \"multiplier\" : 1,\n   \"attributes\" : [ {\n     \"name\" : \"version\",\n     \"value\" : \"1.0\",\n     \"created\" : [date],\n     \"updated\" : [date]\n   } ],\n   \"productContent\" : [ ],\n   \"dependentProductIds\" : [ ],\n   \"href\" : \"/products/product_id\",\n   \"created\" : [date],\n   \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "a Product object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ProductResource.getProductCertificate",
    "url": "/products/{product_id}/certificate",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retreives a Certificate for a Product",
    "deprecated": null,
    "returns": "a ProductCertificate object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ProductResource.getProductOwners",
    "url": "/products/owners",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "product",
        "type": "list"
      }
    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Owners by Product",
    "deprecated": null,
    "returns": "a list of Owner objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      },
      {
        "statusCode": 400,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ProductResource.getProductStats",
    "description": "Retrieves a list of Statistics for a Product\n <p>\n By Statistic type",
    "deprecated": null,
    "returns": "a list of Statistic objects",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ProductResource.getProductStats(java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
    "url": "/products/{product_id}/statistics",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "from",
        "type": "string"
      },
      {
        "name": "to",
        "type": "string"
      },
      {
        "name": "days",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    }
  },
  {
    "method": "org.candlepin.resource.ProductResource.getProductStats(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)",
    "url": "/products/{product_id}/statistics/{vtype}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [
      {
        "name": "from",
        "type": "string"
      },
      {
        "name": "to",
        "type": "string"
      },
      {
        "name": "days",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "array"
    }
  },
  {
    "method": "org.candlepin.resource.ProductResource.refreshPoolsForProduct",
    "url": "/products/subscriptions",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [
      {
        "name": "product",
        "type": "list"
      },
      {
        "name": "lazy_regen",
        "type": "boolean"
      }
    ],
    "returnType": {
      "type": "array",
      "items": {
        "type": "object"
      }
    },
    "description": "Refreshes Pools by Product",
    "deprecated": null,
    "returns": "a JobDetail object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.ProductResource.removeContent",
    "url": "/products/{product_id}/content/{content_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes Content from a Product",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.ProductResource.updateProduct",
    "url": "/products/{product_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Updates a Product",
    "deprecated": null,
    "returns": "a Product object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RoleResource.addRolePermission",
    "url": "/roles/{role_id}/permissions",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Adds a Permission to a Role\n <p>\n Returns the updated Role.",
    "deprecated": null,
    "returns": "a Role object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RoleResource.addUser",
    "url": "/roles/{role_id}/users/{username}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Adds a User to a Role",
    "deprecated": null,
    "returns": "a Role object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RoleResource.createRole",
    "url": "/roles",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates a Role",
    "deprecated": null,
    "returns": "a Role object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RoleResource.deleteRole",
    "url": "/roles/{role_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes a Role",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RoleResource.deleteUser",
    "url": "/roles/{role_id}/users/{username}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Removes a User from a Role",
    "deprecated": null,
    "returns": "a Role object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RoleResource.getRole",
    "url": "/roles/{role_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Role\n <p>\n <pre>\n {\n     \"id\" : \"database_id\",\n     \"owner\" : {},\n     \"access\" : \"READ_ONLY\",\n     \"type\" : \"OWNER\",\n     \"created\" : [date],\n     \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "a Role object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RoleResource.getRoles",
    "url": "/roles",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Roles",
    "deprecated": null,
    "returns": "a list of Role objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RoleResource.removeRolePermission",
    "url": "/roles/{role_id}/permissions/{perm_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Removes a Permission from a Role\n <p>\n Returns the updated Role.",
    "deprecated": null,
    "returns": "a Role object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RoleResource.updateRole",
    "url": "/roles/{role_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Updates a Role\n <p>\n To avoid race conditions, we do not support updating the user or permission\n collections. Currently this call will only update the role name.\n <p>\n See the specific nested POST/DELETE calls for modifying users and permissions.",
    "deprecated": null,
    "returns": "a Role object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RootResource.getRootResources",
    "url": "/",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Links\n <p>\n Corresponds to the Root Resources",
    "deprecated": null,
    "returns": "a list of Link objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RulesResource.delete",
    "url": "/rules",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes the Rules\n <p>\n Deletes any uploaded rules, uses bundled rules instead",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RulesResource.get",
    "url": "/rules",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "string"
    },
    "description": "Retrieves the Rules",
    "deprecated": null,
    "returns": "a String object",
    "httpStatusCodes": [
      {
        "statusCode": 503,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.RulesResource.upload",
    "url": "/rules",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "string"
    },
    "description": "Uploads the Rules\n <p>\n Returns a copy of the uploaded rules.",
    "deprecated": null,
    "returns": "a String object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.StatisticResource.execute",
    "url": "/statistics/generate",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Gathers statistics in system\n <p>\n Records them in Statistic History table",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 503,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.StatusResource.status",
    "url": "/status",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves the Status of the System\n <p>\n <pre>\n {\n   \"result\" : true,\n   \"version\" : \"0.9.10\",\n   \"rulesVersion\" : \"5.8\",\n   \"release\" : \"1\",\n   \"standalone\" : true,\n   \"timeUTC\" : [date],\n   \"managerCapabilities\" : [ \"cores\", \"ram\", \"instance_multiplier\" ],\n   \"rulesSource\" : \"DEFAULT\"\n }\n </pre>\n <p>\n Status to see if a server is up and running",
    "deprecated": null,
    "returns": "a Status object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.SubscriptionResource.activateSubscription",
    "url": "/subscriptions",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [
      {
        "name": "consumer_uuid",
        "type": "string"
      },
      {
        "name": "email",
        "type": "string"
      },
      {
        "name": "email_locale",
        "type": "string"
      }
    ],
    "returnType": {
      "type": "object"
    },
    "description": "Activates a Subscription",
    "deprecated": null,
    "returns": "A Response object (with status code 202)",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 503,
        "description": ""
      },
      {
        "statusCode": 202,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.SubscriptionResource.deleteSubscription",
    "url": "/subscriptions/{subscription_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes a Subscription",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.SubscriptionResource.getSubCert",
    "url": "/subscriptions/{subscription_id}/cert",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a Subscription Certificate",
    "deprecated": null,
    "returns": "a SubscriptionCertificate object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.SubscriptionResource.getSubCertAsPem",
    "url": "/subscriptions/{subscription_id}/cert",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "string"
    },
    "description": "Retrieves a Subscription Certificate\n <p>\n As a PEM",
    "deprecated": null,
    "returns": "a String object",
    "httpStatusCodes": [

    ]
  },
  {
    "method": "org.candlepin.resource.SubscriptionResource.getSubscription",
    "url": "/subscriptions/{subscription_id}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single Subscription\n <p>\n <pre>\n {\n   \"id\" : \"8a8d0986458ef80101458ef87a27057a\",\n   \"owner\" : {},\n   \"product\" : {},\n   \"derivedProduct\" : null,\n   \"providedProducts\" : [ ],\n   \"derivedProvidedProducts\" : [ ],\n   \"branding\" : [ ],\n   \"quantity\" : 15,\n   \"startDate\" : [date],\n   \"endDate\" : [date],\n   \"contractNumber\" : \"5\",\n   \"accountNumber\" : \"12331131231\",\n   \"modified\" : null,\n   \"orderNumber\" : \"order-8675309\",\n   \"upstreamPoolId\" : null,\n   \"upstreamEntitlementId\" : null,\n   \"upstreamConsumerId\" : null,\n   \"cdn\" : {},\n   \"certificate\" : {},\n   \"stacked\" : false,\n   \"stackId\" : null,\n   \"created\" : [date],\n   \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "a Subscription object",
    "httpStatusCodes": [
      {
        "statusCode": 400,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.SubscriptionResource.getSubscriptions",
    "url": "/subscriptions",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Subscriptions",
    "deprecated": null,
    "returns": "a list of Subscription objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.UserResource.createUser",
    "url": "/users",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "POST"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Creates a User",
    "deprecated": null,
    "returns": "a User object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.UserResource.deleteUser",
    "url": "/users/{username}",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "DELETE"
    ],
    "queryParams": [

    ],
    "returnType": null,
    "description": "Removes a User",
    "deprecated": null,
    "returns": null,
    "httpStatusCodes": [
      {
        "statusCode": 410,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.UserResource.getUserInfo",
    "url": "/users/{username}",
    "verifiedParams": [
      "username"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Retrieves a single User\n <p>\n <pre>\n {\n   \"id\" : \"database_id\",\n   \"username\" : \"user_name\",\n   \"hashedPassword\" : \"05557a2aaec7cb676df574d2eb080691949a6752\",\n   \"superAdmin\" : false,\n   \"created\" : [date],\n   \"updated\" : [date]\n }\n </pre>",
    "deprecated": null,
    "returns": "a User object",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.UserResource.getUserRoles",
    "url": "/users/{username}/roles",
    "verifiedParams": [
      "username"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Roles by User",
    "deprecated": null,
    "returns": "a list of Role objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.UserResource.list",
    "url": "/users",
    "verifiedParams": [

    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieves a list of Users",
    "deprecated": null,
    "returns": "a list of User objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.UserResource.listUsersOwners",
    "url": "/users/{username}/owners",
    "verifiedParams": [
      "username"
    ],
    "httpVerbs": [
      "GET"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "array"
    },
    "description": "Retrieve a list of owners the user can register systems to.\n <p>\n Previously this represented owners the user was an admin for. Because the client uses\n this API call to list the owners a user can register to, when we introduced \"my\n systems\" administrator, we have to change its meaning to listing the owners that\n can be registered to by default to maintain compatability with released clients.",
    "deprecated": null,
    "returns": "a list of Owner objects",
    "httpStatusCodes": [
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  },
  {
    "method": "org.candlepin.resource.UserResource.updateUser",
    "url": "/users/{username}",
    "verifiedParams": [
      "username"
    ],
    "httpVerbs": [
      "PUT"
    ],
    "queryParams": [

    ],
    "returnType": {
      "type": "object"
    },
    "description": "Updates a User",
    "deprecated": null,
    "returns": "a User object",
    "httpStatusCodes": [
      {
        "statusCode": 404,
        "description": ""
      },
      {
        "statusCode": 200,
        "description": ""
      }
    ]
  }
]